<web-app xmlns="http://java.sun.com/xml/ns/javaee"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
      version="3.0">
      
	<!-- SPRING配置 -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
					classpath:conf/applicationContext.xml
					classpath:conf/applicationContext-dwsurvey.xml
		</param-value>
	</context-param>
	
	
	<servlet>
		<servlet-name>DispatcherServlet</servlet-name>
		<servlet-class>
			org.springframework.web.servlet.DispatcherServlet
		</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:spring-*.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>DispatcherServlet</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>
	
	<context-param>
		   <param-name>log4jConfigLocation</param-name>
		   <param-value>/WEB-INF/classes/conf/log4j.properties</param-value>
	</context-param>
	
	<!-- Filter 定义 -->
	<filter>
	    <filter-name>UrlRewriteFilter</filter-name>
	    <filter-class>org.tuckey.web.filters.urlrewrite.UrlRewriteFilter</filter-class>
	     <init-param>
            <param-name>confReloadCheckInterval</param-name>
            <param-value>0</param-value>
        </init-param>
	</filter>
	
	<filter-mapping>
	    <filter-name>UrlRewriteFilter</filter-name>
	    <url-pattern>/*</url-pattern>
	    <dispatcher>REQUEST</dispatcher>
	    <dispatcher>FORWARD</dispatcher>
	</filter-mapping>
	
	
	<!-- Character Encoding filter -->
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
		<dispatcher>REQUEST</dispatcher>
		<dispatcher>FORWARD</dispatcher>
	</filter-mapping>
	
	  <!-- 配置Java Xss保护过滤器 -->
    <filter>
        <filter-name>xssFilter</filter-name>
        <filter-class>com.key.common.plugs.xss.XssFilter</filter-class>
    </filter>
    <filter-mapping>
		<filter-name>xssFilter</filter-name>
		<url-pattern>*.action</url-pattern>
		<dispatcher>REQUEST</dispatcher>
		<dispatcher>FORWARD</dispatcher>
	</filter-mapping>

	<!-- Hibernate Open Session In View filter -->
	<filter>
		<filter-name>hibernateOpenSessionInViewFilter</filter-name>
		<filter-class>org.springframework.orm.hibernate3.support.OpenSessionInViewFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>hibernateOpenSessionInViewFilter</filter-name>
		<url-pattern>*.action</url-pattern>
		<dispatcher>REQUEST</dispatcher>
		<dispatcher>FORWARD</dispatcher>
	</filter-mapping>
	<filter-mapping>
		<filter-name>hibernateOpenSessionInViewFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<filter>
		<filter-name>sitemeshFilter</filter-name>
		<filter-class>org.sitemesh.config.ConfigurableSiteMeshFilter</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>sitemeshFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<!-- Shiro filter  -->
	 <filter>
        <filter-name>shiroFilter</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>shiroFilter</filter-name>
        <url-pattern>/*</url-pattern>
        <dispatcher>REQUEST</dispatcher>
		<dispatcher>FORWARD</dispatcher>
    </filter-mapping>
     
	<!-- struts2 filter -->
	<!-- <filter>
		<filter-name>struts2CleanupFilter</filter-name>
		<filter-class>org.apache.struts2.dispatcher.ActionContextCleanUp</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>struts2CleanupFilter</filter-name>
		<url-pattern>*.action</url-pattern>
		<dispatcher>REQUEST</dispatcher>
		<dispatcher>FORWARD</dispatcher>
	</filter-mapping>
		-->
	
    
	<filter>
		<filter-name>struts2Filter</filter-name>
		<filter-class>org.apache.struts2.dispatcher.filter.StrutsPrepareAndExecuteFilter</filter-class>
		<init-param>
			<param-name>config</param-name>
			<param-value>struts-default.xml,
						 struts-plugin.xml,
						 /conf/struts.xml
			</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>struts2Filter</filter-name>
		<url-pattern>*.action</url-pattern>
		<dispatcher>REQUEST</dispatcher>
		<dispatcher>FORWARD</dispatcher>
	</filter-mapping> 
	
	<listener>
	   <listener-class>
			org.springframework.web.util.Log4jConfigListener
	   </listener-class>
	</listener>
	
	<!--Spring ApplicationContext 载入 -->
	<listener>
		<listener-class>
			org.springframework.web.context.ContextLoaderListener
		</listener-class>
	</listener>

	<welcome-file-list>
		<!--<welcome-file>index.jsp</welcome-file>-->
		<welcome-file>login.jsp</welcome-file>
	</welcome-file-list>
	
	<error-page>
	    <error-code>404</error-code>
	    <location>/common/building.jsp</location>
	</error-page>
	<error-page>
	    <error-code>500</error-code>
	    <location>/common/error.jsp</location>
	</error-page>
	
	<servlet>
		<servlet-name>toHtml</servlet-name>
		<servlet-class>com.key.common.utils.ToHtmlServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>toHtml</servlet-name>
		<url-pattern>/toHtml</url-pattern>
	</servlet-mapping>
	
	<listener>
        <listener-class>com.key.common.utils.web.InitAppliction</listener-class>
    </listener>
    
<!--     ======================== 单点登录开始 ========================  
    用于单点退出，该过滤器用于实现单点登出功能，可选配置  
    <listener>  
        <listener-class>org.jasig.cas.client.session.SingleSignOutHttpSessionListener</listener-class>  
    </listener>  
      
    该过滤器用于实现单点登出功能，可选配置。  
    <filter>  
        <filter-name>CAS Single Sign Out Filter</filter-name>  
        <filter-class>org.jasig.cas.client.session.SingleSignOutFilter</filter-class>  
    </filter>  
  
    <filter-mapping>  
        <filter-name>CAS Single Sign Out Filter</filter-name>  
        <url-pattern>/logout</url-pattern>  
    </filter-mapping>  
  
    该过滤器负责用户的认证工作，必须启用它  
    <filter>  
        <filter-name>CASFilter</filter-name>  
        <filter-class>org.jasig.cas.client.authentication.AuthenticationFilter</filter-class>  
        <init-param>  
            <param-name>casServerLoginUrl</param-name>  
            <param-value>http://124.74.47.242:9630/cas_debug/login</param-value>cas 服务器登录 地址  http://IP:PORT/CasWebProName/login  
        </init-param>  
        <init-param>  
            这里的server是服务端的IP  
            <param-name>serverName</param-name>  
            <param-value>http://localhost:8080</param-value>客户端服务器地址   http://IP:PORT  
        </init-param>  
    </filter>  
  
    <filter-mapping>  
        <filter-name>CASFilter</filter-name>  
        <url-pattern>/*</url-pattern>  
    </filter-mapping>  
      
    该过滤器负责对Ticket的校验工作，必须启用它  
    <filter>  
        <filter-name>CAS Validation Filter</filter-name>  
        <filter-class>org.jasig.cas.client.validation.Cas20ProxyReceivingTicketValidationFilter</filter-class>  
        <init-param>  
            <param-name>casServerUrlPrefix</param-name>  
            <param-value>http://124.74.47.242:9630/cas_debug</param-value>cas 服务器地址  http://IP:PORT/CasWebProName  
        </init-param>  
        <init-param>  
            <param-name>serverName</param-name>  
            <param-value>http://localhost:8080</param-value>客户端服务器地址   http://IP:PORT  
        </init-param>  
        <init-param>
            <param-name>redirectAfterValidation</param-name>
            <param-value>true</param-value>
        </init-param>
        <init-param>
            <param-name>useSession</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>  
    <filter-mapping>
        <filter-name>CAS Validation Filter</filter-name>  
        <url-pattern>/*</url-pattern>  
    </filter-mapping>  
      
    该过滤器负责实现HttpServletRequest请求的包裹， 比如允许开发者通过HttpServletRequest的getRemoteUser()方法获得SSO登录用户的登录名，可选配置。  
    <filter>  
        <filter-name>CAS HttpServletRequest Wrapper Filter</filter-name>  
        <filter-class>org.jasig.cas.client.util.HttpServletRequestWrapperFilter</filter-class>  
    </filter>  
    <filter-mapping>  
        <filter-name>CAS HttpServletRequest Wrapper Filter</filter-name>  
        <url-pattern>/*</url-pattern>  
    </filter-mapping>  
      
    该过滤器使得开发者可以通过org.jasig.cas.client.util.AssertionHolder来获取用户的登录名。 比如AssertionHolder.getAssertion().getPrincipal().getName()。  
    <filter>  
        <filter-name>CAS Assertion Thread Local Filter</filter-name>  
        <filter-class>org.jasig.cas.client.util.AssertionThreadLocalFilter</filter-class>  
    </filter>  
    <filter-mapping>  
        <filter-name>CAS Assertion Thread Local Filter</filter-name>  
        <url-pattern>/*</url-pattern>  
    </filter-mapping>  
    ======================== 单点登录结束 ========================   -->
	<!-- 
	<error-page>
	    <error-code>500</error-code>
	    <location>/common/error.jsp</location>
	</error-page> -->

	<!-- https 
	<security-constraint> <web-resource-collection> <web-resource-name>SSL</web-resource-name> 
		<url-pattern>/login!login.action</url-pattern> <url-pattern>/login.jsp</url-pattern> 
		</web-resource-collection> <user-data-constraint> <transport-guarantee>CONFIGENTIAL</transport-guarantee> 
		</user-data-constraint> 
	</security-constraint> 
	-->
    
</web-app>
